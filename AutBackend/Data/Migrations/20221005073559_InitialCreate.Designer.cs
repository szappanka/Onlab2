// <auto-generated />
using Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(MaraudersMapDbContext))]
    [Migration("20221005073559_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Entities.EscapeRoomCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("EscapeRoomCourses");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("Data.Entities.EscapeRoomCourseTasks", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "TaskId");

                    b.HasIndex("TaskId");

                    b.ToTable("EscapeRoomCourseTasks");
                });

            modelBuilder.Entity("Data.Entities.EscapeRoomTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EscapeRoomTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = false,
                            ImageURL = "1.png",
                            Name = "plant"
                        },
                        new
                        {
                            Id = 2,
                            Completed = true,
                            ImageURL = "2.png",
                            Name = "key"
                        },
                        new
                        {
                            Id = 3,
                            Completed = false,
                            ImageURL = "3.png",
                            Name = "lock"
                        });
                });

            modelBuilder.Entity("Data.Entities.EscapeRoomCourseTasks", b =>
                {
                    b.HasOne("Data.Entities.EscapeRoomCourse", "Course")
                        .WithMany("EscapeRoomTasks")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.EscapeRoomTask", "Task")
                        .WithMany("EscapeRoomCourses")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Data.Entities.EscapeRoomCourse", b =>
                {
                    b.Navigation("EscapeRoomTasks");
                });

            modelBuilder.Entity("Data.Entities.EscapeRoomTask", b =>
                {
                    b.Navigation("EscapeRoomCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
